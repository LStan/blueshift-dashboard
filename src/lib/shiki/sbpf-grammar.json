{
  "scopeName": "source.sbpf-asm",
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#opcodes" },
    { "include": "#registers" },
    { "include": "#numbers" },
    { "include": "#strings" },
    { "include": "#labels" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.hash.sbpf-asm",
          "begin": "#",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.sbpf-asm" }
          },
          "end": "$",
          "patterns": [
            { "match": ".", "name": "comment.line.hash.sbpf-asm" }
          ]
        },
        {
          "name": "comment.line.semicolon.sbpf-asm",
          "begin": ";",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.sbpf-asm" }
          },
          "end": "$",
          "patterns": [
            { "match": ".", "name": "comment.line.semicolon.sbpf-asm" }
          ]
        },
        {
          "name": "comment.line.double-slash.sbpf-asm",
          "begin": "//",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.sbpf-asm" }
          },
          "end": "$",
          "patterns": [
            { "match": ".", "name": "comment.line.double-slash.sbpf-asm" }
          ]
        },
        {
          "name": "comment.block.sbpf-asm",
          "begin": "/\\*",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.comment.sbpf-asm" }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": { "name": "punctuation.definition.comment.sbpf-asm" }
          },
          "patterns": [{ "match": ".", "name": "comment.block.sbpf-asm" }]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\.(?:extern|section|globl|global|rodata|ascii|asciz)",
          "name": "storage.type.class.sbpf-asm"
        }
      ]
    },
    "opcodes": {
      "patterns": [
        {
          "match": "\\b(?:add|and|arsh|div|lmul|lsh|mod|mov|mul|neg|or|rsh|sdiv|shmul|srem|sub|udiv|uhmul|urem|xor)(32|64)\\b",
          "name": "keyword.opcode.arithmetic.sbpf-asm"
        },
        {
          "match": "\\b(?:be|call|exit|hor64|j(?:a|eq|ge|gt|le|lt|ne)|js(?:et|ge|gt|le|lt))\\b",
          "name": "keyword.opcode.controlflow.sbpf-asm"
        },
        {
          "match": "\\b(?:ld(?:b|h|w|dw)|ldx(?:b|h|w|dw)|le|st(?:b|h|w|dw)|stx(?:b|h|w|dw))\\b",
          "name": "keyword.opcode.memory.sbpf-asm"
        }
      ]
    },
    "registers": {
      "patterns": [
        {
          "match": "\\b[r][0-9]{1,2}\\b",
          "name": "variable.register.sbpf-asm"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b0x[0-9a-fA-F]+\\b",
          "name": "constant.numeric.hex.sbpf-asm"
        },
        {
          "match": "\\b\\d+\\b",
          "name": "constant.numeric.decimal.sbpf-asm"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.sbpf-asm",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.sbpf-asm"
            }
          ]
        }
      ]
    },
    "labels": {
      "patterns": [
        {
          "match": "^[a-zA-Z_][a-zA-Z0-9_]*:",
          "name": "punctuation.definition.block.tag.sbpf-asm"
        }
      ]
    }
  }
}
